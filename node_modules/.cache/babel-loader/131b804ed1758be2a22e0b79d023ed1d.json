{"ast":null,"code":"import _classCallCheck from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shasta/Documents/Web/Threejs/Our Project/src/components/Three/SimpleExamples/GroupExample.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport OrbitControls from 'three-orbitcontrols';\n\nvar ObjectLoaderExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ObjectLoaderExample, _Component);\n\n  function ObjectLoaderExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ObjectLoaderExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ObjectLoaderExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleResize = function () {\n      var width = _this.mount.clientWidth;\n      var height = _this.mount.clientHeight;\n\n      _this.renderer.setSize(width, height);\n\n      _this.camera.aspect = width / height;\n\n      _this.camera.updateProjectionMatrix();\n    };\n\n    _this.start = function () {\n      if (!_this.frameId) {\n        _this.frameId = requestAnimationFrame(_this.animate);\n      }\n    };\n\n    _this.stop = function () {\n      cancelAnimationFrame(_this.frameId);\n    };\n\n    _this.animate = function () {\n      _this.renderScene();\n\n      _this.frameId = window.requestAnimationFrame(_this.animate);\n    };\n\n    _this.renderScene = function () {\n      _this.renderer.render(_this.scene, _this.camera);\n    };\n\n    return _this;\n  }\n\n  _createClass(ObjectLoaderExample, [{\n    key: \"initCamera\",\n    value: function initCamera() {\n      var width = this.mount.clientWidth;\n      var height = this.mount.clientHeight;\n      var camera = new THREE.PerspectiveCamera(90, width / height, 1, 2000);\n      camera.position.z = 4;\n      this.camera = camera;\n    }\n  }, {\n    key: \"initScene\",\n    value: function initScene() {\n      var scene = new THREE.Scene();\n      scene.background = new THREE.Color(0x8FBCD4);\n      this.scene = scene;\n    }\n  }, {\n    key: \"initMeshes\",\n    value: function initMeshes() {\n      var train = new THREE.Group();\n      this.scene.add(train); //Create Material\n\n      var bodyMaterial = new THREE.MeshStandardMaterial({\n        color: 0xff3333,\n        // red\n        flatShading: true\n      });\n      var detailMaterial = new THREE.MeshStandardMaterial({\n        color: 0x333333,\n        // darkgrey\n        flatShading: true\n      });\n      var noseGeometry = new THREE.CylinderBufferGeometry(0.75, 0.75, 3, 32);\n      var nose = new THREE.Mesh(noseGeometry, bodyMaterial);\n      nose.rotation.z = Math.PI / 2;\n      nose.position.x = -1;\n      var cabinGeometry = new THREE.BoxBufferGeometry(2, 2.25, 1.5);\n      var cabin = new THREE.Mesh(cabinGeometry, bodyMaterial);\n      cabin.position.set(1.5, 0.4, 0);\n      train.add(nose, cabin);\n      var wheelGeo = new THREE.CylinderBufferGeometry(0.4, 0.4, 1.75, 16);\n      wheelGeo.rotateX(Math.PI / 2);\n      var smallWheelRear = new THREE.Mesh(wheelGeo, detailMaterial);\n      smallWheelRear.position.set(0, -0.5, 0);\n      var smallWheelCenter = smallWheelRear.clone();\n      smallWheelCenter.position.x = -1;\n      var smallWheelFront = smallWheelRear.clone();\n      smallWheelFront.position.x = -2;\n      var bigWheel = smallWheelRear.clone();\n      bigWheel.scale.set(2, 2, 1.25);\n      bigWheel.position.set(1.5, -0.1, 0);\n      train.add(smallWheelRear, smallWheelCenter, smallWheelFront, bigWheel);\n      var chimneyGeometry = new THREE.CylinderBufferGeometry(0.3, 0.1, 0.5);\n      var chimney = new THREE.Mesh(chimneyGeometry, detailMaterial);\n      chimney.position.set(-2, 0.9, 0);\n      train.add(chimney);\n    }\n  }, {\n    key: \"initLight\",\n    value: function initLight() {\n      var ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      this.scene.add(ambientLight);\n      var frontLight = new THREE.DirectionalLight(0xffffff, 1);\n      frontLight.position.set(10, 10, 10);\n      var backLight = new THREE.DirectionalLight(0xffffff, 1);\n      backLight.position.set(-10, 10, -10);\n      this.scene.add(frontLight, backLight);\n    }\n  }, {\n    key: \"initRenderer\",\n    value: function initRenderer() {\n      var width = this.mount.clientWidth;\n      var height = this.mount.clientHeight;\n      var renderer = new THREE.WebGLRenderer({\n        alpha: true\n      });\n      renderer.setSize(width, height);\n      renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer = renderer;\n    }\n  }, {\n    key: \"initController\",\n    value: function initController() {\n      //add orbit\n      var orbit = new OrbitControls(this.camera, this.renderer.domElement);\n      this.scene.add(orbit);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initCamera();\n      this.initScene();\n      this.initMeshes();\n      this.initLight();\n      this.initRenderer();\n      this.initController(); //response for changing window size\n\n      window.addEventListener('resize', this.handleResize);\n      this.mount.appendChild(this.renderer.domElement);\n      this.start();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.handleResize);\n      this.stop();\n      this.mount.removeChild(this.renderer.domElement);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 'calc(100vh - 100px)'\n        },\n        ref: function ref(mount) {\n          _this2.mount = mount;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ObjectLoaderExample;\n}(Component);\n\nexport default ObjectLoaderExample;","map":{"version":3,"sources":["/Users/shasta/Documents/Web/Threejs/Our Project/src/components/Three/SimpleExamples/GroupExample.js"],"names":["React","Component","THREE","OrbitControls","ObjectLoaderExample","handleResize","width","mount","clientWidth","height","clientHeight","renderer","setSize","camera","aspect","updateProjectionMatrix","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","renderScene","window","render","scene","PerspectiveCamera","position","z","Scene","background","Color","train","Group","add","bodyMaterial","MeshStandardMaterial","color","flatShading","detailMaterial","noseGeometry","CylinderBufferGeometry","nose","Mesh","rotation","Math","PI","x","cabinGeometry","BoxBufferGeometry","cabin","set","wheelGeo","rotateX","smallWheelRear","smallWheelCenter","clone","smallWheelFront","bigWheel","scale","chimneyGeometry","chimney","ambientLight","AmbientLight","frontLight","DirectionalLight","backLight","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","orbit","domElement","initCamera","initScene","initMeshes","initLight","initRenderer","initController","addEventListener","appendChild","removeEventListener","removeChild"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport * as THREE from 'three'\nimport OrbitControls from 'three-orbitcontrols'\n\nclass ObjectLoaderExample extends Component {\n    \n    initCamera()\n    {\n        let width = this.mount.clientWidth\n        let height = this.mount.clientHeight\n        \n        let camera = new THREE.PerspectiveCamera(90, width / height, 1, 2000)\n        \n        camera.position.z = 4\n\n        this.camera = camera\n    }\n    initScene()\n    {\n        let scene = new THREE.Scene()\n        scene.background = new THREE.Color( 0x8FBCD4 );\n\n        this.scene = scene\n    }\n    initMeshes()\n    {\n        let train = new THREE.Group();\n        this.scene.add( train );\n\n        //Create Material\n        let bodyMaterial = new THREE.MeshStandardMaterial( {\n            color: 0xff3333, // red\n            flatShading: true,\n          } );\n        \n        let detailMaterial = new THREE.MeshStandardMaterial( {\n            color: 0x333333, // darkgrey\n            flatShading: true,\n        } );\n\n        const noseGeometry = new THREE.CylinderBufferGeometry( 0.75, 0.75, 3, 32 );\n        const nose = new THREE.Mesh( noseGeometry, bodyMaterial );\n\n        nose.rotation.z = Math.PI / 2;\n        nose.position.x = -1;\n        \n\n        const cabinGeometry = new THREE.BoxBufferGeometry( 2, 2.25, 1.5 );\n        const cabin = new THREE.Mesh( cabinGeometry, bodyMaterial );\n        cabin.position.set( 1.5, 0.4, 0 );\n\n        train.add( nose, cabin );\n\n        const wheelGeo = new THREE.CylinderBufferGeometry( 0.4, 0.4, 1.75, 16 );\n        wheelGeo.rotateX( Math.PI / 2 );\n\n\n        const smallWheelRear = new THREE.Mesh( wheelGeo, detailMaterial );\n        smallWheelRear.position.set( 0, -0.5, 0 );\n\n        const smallWheelCenter = smallWheelRear.clone();\n        smallWheelCenter.position.x = -1;\n\n        const smallWheelFront = smallWheelRear.clone();\n        smallWheelFront.position.x = -2;\n\n        const bigWheel = smallWheelRear.clone();\n        bigWheel.scale.set( 2, 2, 1.25 );\n        bigWheel.position.set( 1.5, -0.1, 0 );\n\n        train.add( smallWheelRear, smallWheelCenter, smallWheelFront, bigWheel );\n\n        const chimneyGeometry = new THREE.CylinderBufferGeometry( 0.3, 0.1, 0.5 );\n        const chimney = new THREE.Mesh( chimneyGeometry, detailMaterial );\n        chimney.position.set( -2, 0.9, 0 );\n      \n        train.add( chimney );\n    }\n    initLight()\n    {\n        let ambientLight = new THREE.AmbientLight( 0xffffff, 0.5 );\n        this.scene.add( ambientLight );\n\n        let frontLight = new THREE.DirectionalLight( 0xffffff, 1 );\n        frontLight.position.set( 10, 10, 10 );\n\n        let backLight = new THREE.DirectionalLight( 0xffffff, 1 );\n        backLight.position.set( -10, 10, -10 );\n\n        this.scene.add( frontLight, backLight );\n    }\n    initRenderer()\n    {\n        let width = this.mount.clientWidth\n        let height = this.mount.clientHeight\n\n        let renderer = new THREE.WebGLRenderer({ alpha: true })\n        renderer.setSize(width, height)\n        renderer.setPixelRatio( window.devicePixelRatio );\n\n        this.renderer = renderer\n    }\n\n    initController()\n    {\n        //add orbit\n        let orbit = new OrbitControls( this.camera, this.renderer.domElement );\n        this.scene.add(orbit);\n    }\n    componentDidMount() {\n\n        this.initCamera()\n        this.initScene()\n        this.initMeshes()\n        this.initLight()\n        this.initRenderer()\n        this.initController()\n\n        //response for changing window size\n        window.addEventListener('resize', this.handleResize)\n\n        this.mount.appendChild(this.renderer.domElement)\n        this.start()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize',  this.handleResize)\n        this.stop()\n        this.mount.removeChild(this.renderer.domElement)\n    }\n\n    handleResize = () => {\n        \n        let width = this.mount.clientWidth\n        let height = this.mount.clientHeight\n        \n        this.renderer.setSize(width, height)\n        this.camera.aspect = width / height\n        this.camera.updateProjectionMatrix()\n    }\n\n    start = () => {\n        if (!this.frameId) {\n        this.frameId = requestAnimationFrame(this.animate)\n        }\n    }\n\n    stop = () => {\n        cancelAnimationFrame(this.frameId)\n    }\n\n    animate = () => {\n        this.renderScene()\n        this.frameId = window.requestAnimationFrame(this.animate)\n    }\n\n    renderScene = () => {\n        this.renderer.render(this.scene, this.camera)\n    }\n\n    render() {\n        return (\n        <div\n            style={{ width: '100%', height: 'calc(100vh - 100px)' }}\n            ref={mount => {\n            this.mount = mount\n            }}\n        />\n        )\n    }\n}\n\nexport default ObjectLoaderExample\n"]},"metadata":{},"sourceType":"module"}