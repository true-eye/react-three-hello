{"ast":null,"code":"// Three JSON Parser\nmodule.exports = function (THREE) {\n  /**\n   * Converts decimal values in the range 0-1 to hexadecimal values between 00 and FF.\n   * @param {Array} rgb: An array of three values, representing red, green and blue values.\n   */\n  function rgbToHex(rgb) {\n    function componentToHex(c) {\n      var hex = c.toString(16).toUpperCase();\n      return hex.length === 1 ? \"0\" + hex : hex;\n    }\n\n    var color = rgb.map(function (component) {\n      return componentToHex(parseInt(component * 255));\n    });\n    color.unshift(\"0X\");\n    color = color.join(\"\");\n    return parseInt(color);\n  }\n  /**\n   * Generates a THREE.Mesh using the data passed.\n   * @param {Object} data: a JSON file specifying the attributes of the mesh.\n   */\n\n\n  return function generateMesh(data) {\n    // Parse data to geometry.\n    var geometry = new THREE.Geometry();\n    data.vertices.forEach(function (vector) {\n      geometry.vertices.push(new THREE.Vector3(vector[0], vector[1], vector[2]));\n    });\n\n    for (var i = 0; i < data.faces.length; i++) {\n      geometry.faces.push(new THREE.Face3(data.faces[i][0], data.faces[i][1], data.faces[i][2], [normals[i][0], normals[i][1], normals[i][2]]));\n      geometry.faceVertexUvs[0].push(new THREE.Vector2(data.uvs[i], data.uvs[i + 1]));\n    }\n\n    geometry.computeFaceNormals();\n    var material; // Determine material type.\n\n    if (data.diffuse && data.ambient && data.specular) {\n      // Phong material.\n      material = new THREE.MeshPhongMaterial({\n        color: rgbToHex(data.diffuse),\n        specular: rgbToHex(data.specular)\n      });\n    } else if (data.diffuse && data.ambient) {\n      // Lambert material.\n      material = new THREE.MeshLambertMaterial({\n        color: rgbToHex(data.diffuse)\n      });\n    } else if (data.ambient) {\n      // Basic material.\n      material = new THREE.MeshBasicMaterial({\n        color: rgbToHex(data.diffuse)\n      });\n    }\n\n    var mesh = new THREE.Mesh(geometry, material);\n    return mesh;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}