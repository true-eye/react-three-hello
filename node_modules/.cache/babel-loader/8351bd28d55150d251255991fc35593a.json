{"ast":null,"code":"import _classCallCheck from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shasta/Documents/Web/Threejs/Our Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shasta/Documents/Web/Threejs/Our Project/src/components/Three/ControlExamples/OrbitControlExample.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport OrbitControls from 'three-orbitcontrols';\n\nvar OrbitControlExample =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OrbitControlExample, _Component);\n\n  function OrbitControlExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OrbitControlExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OrbitControlExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleResize = function () {\n      var width = _this.mount.clientWidth;\n      var height = _this.mount.clientHeight;\n\n      _this.renderer.setSize(width, height);\n\n      _this.camera.aspect = width / height;\n\n      _this.camera.updateProjectionMatrix();\n    };\n\n    _this.start = function () {\n      if (!_this.frameId) {\n        _this.frameId = requestAnimationFrame(_this.animate);\n      }\n    };\n\n    _this.stop = function () {\n      cancelAnimationFrame(_this.frameId);\n    };\n\n    _this.animate = function () {\n      _this.sphere.rotation.x += 0.01;\n      _this.sphere.rotation.y += 0.01;\n      _this.sphere.rotation.z += 0.01;\n\n      _this.renderScene();\n\n      _this.frameId = window.requestAnimationFrame(_this.animate);\n    };\n\n    _this.renderScene = function () {\n      _this.renderer.render(_this.scene, _this.camera);\n    };\n\n    return _this;\n  }\n\n  _createClass(OrbitControlExample, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var width = this.mount.clientWidth;\n      var height = this.mount.clientHeight; //scene\n\n      var scene = new THREE.Scene();\n      scene.background = new THREE.Color(0x8FBCD4); //camera\n\n      var camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 2000);\n      camera.position.set(-10, 10, -10); //rendere\n\n      var renderer = new THREE.WebGLRenderer({\n        alpha: true\n      });\n      renderer.setSize(width, height); //geometry\n\n      var geometry = new THREE.SphereBufferGeometry(2, 50, 50);\n      var material = new THREE.MeshStandardMaterial({\n        color: 0x000000\n      });\n      var sphere = new THREE.Mesh(geometry, material);\n      scene.add(sphere); //add Directlight\n\n      var light = new THREE.DirectionalLight(0xffffff, 5.0);\n      light.position.set(0, 5, 5);\n      light.intensity *= 5;\n      scene.add(light);\n      var helper = new THREE.DirectionalLightHelper(light, 5);\n      scene.add(helper); //set this. valuable\n\n      this.scene = scene;\n      this.camera = camera;\n      this.renderer = renderer;\n      this.material = material;\n      this.sphere = sphere; //add orbit controller\n\n      var orbit = new OrbitControls(camera, renderer.domElement);\n      scene.add(orbit); //response for changing window size\n\n      window.addEventListener('resize', this.handleResize);\n      this.mount.appendChild(this.renderer.domElement);\n      this.start();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.handleResize);\n      this.stop();\n      this.mount.removeChild(this.renderer.domElement);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: 'calc(100vh - 100px)'\n        },\n        ref: function ref(mount) {\n          _this2.mount = mount;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return OrbitControlExample;\n}(Component);\n\nexport default OrbitControlExample;","map":{"version":3,"sources":["/Users/shasta/Documents/Web/Threejs/Our Project/src/components/Three/ControlExamples/OrbitControlExample.js"],"names":["React","Component","THREE","OrbitControls","OrbitControlExample","handleResize","width","mount","clientWidth","height","clientHeight","renderer","setSize","camera","aspect","updateProjectionMatrix","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","sphere","rotation","x","y","z","renderScene","window","render","scene","Scene","background","Color","PerspectiveCamera","position","set","WebGLRenderer","alpha","geometry","SphereBufferGeometry","material","MeshStandardMaterial","color","Mesh","add","light","DirectionalLight","intensity","helper","DirectionalLightHelper","orbit","domElement","addEventListener","appendChild","removeEventListener","removeChild"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport * as THREE from 'three'\nimport OrbitControls from 'three-orbitcontrols'\n\nclass OrbitControlExample extends Component {\n  componentDidMount() {\n    let width = this.mount.clientWidth\n    let height = this.mount.clientHeight\n    \n    //scene\n    let scene = new THREE.Scene()\n    scene.background = new THREE.Color( 0x8FBCD4 );\n    \n    //camera\n    let camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 2000)\n    camera.position.set( -10, 10, -10 );\n\n    //rendere\n    let renderer = new THREE.WebGLRenderer({ alpha: true })\n    renderer.setSize(width, height)\n\n    //geometry\n    var geometry = new THREE.SphereBufferGeometry( 2, 50, 50 );\n    var material = new THREE.MeshStandardMaterial( {color: 0x000000} );\n    var sphere = new THREE.Mesh( geometry, material );\n    scene.add( sphere );\n\n    //add Directlight\n    let light = new THREE.DirectionalLight( 0xffffff, 5.0 );\n    light.position.set( 0, 5, 5 );\n    light.intensity *= 5;\n    scene.add( light );\n    var helper = new THREE.DirectionalLightHelper( light, 5 );\n\n    scene.add( helper );\n\n    //set this. valuable\n    this.scene = scene\n    this.camera = camera\n    this.renderer = renderer\n    this.material = material\n    this.sphere = sphere\n\n    //add orbit controller\n    let orbit = new OrbitControls( camera, renderer.domElement );\n    scene.add(orbit);\n\n    //response for changing window size\n    window.addEventListener('resize', this.handleResize)\n\n    this.mount.appendChild(this.renderer.domElement)\n    this.start()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize',  this.handleResize)\n    this.stop()\n    this.mount.removeChild(this.renderer.domElement)\n  }\n\n  handleResize = () => {\n    \n    let width = this.mount.clientWidth\n    let height = this.mount.clientHeight\n    \n    this.renderer.setSize(width, height)\n    this.camera.aspect = width / height\n    this.camera.updateProjectionMatrix()\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate)\n    }\n  }\n\n  stop = () => {\n    cancelAnimationFrame(this.frameId)\n  }\n\n  animate = () => {\n    this.sphere.rotation.x += 0.01\n    this.sphere.rotation.y += 0.01\n    this.sphere.rotation.z += 0.01\n\n    this.renderScene()\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n  renderScene = () => {\n    this.renderer.render(this.scene, this.camera)\n  }\n\n  render() {\n    return (\n      <div\n        style={{ width: '100%', height: 'calc(100vh - 100px)' }}\n        ref={mount => {\n          this.mount = mount\n        }}\n      />\n    )\n  }\n}\n\nexport default OrbitControlExample\n"]},"metadata":{},"sourceType":"module"}